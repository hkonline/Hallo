@using Hallo.Resources
@using HalloDal.Models.Users

@model Hallo.ViewModels.UserGroupViewModel

@{
    ViewBag.AdminText = Model.GroupType == GroupType.ACTeam ? "AK Leder" : "SMS Afsender";
    ViewBag.AdminTextPl = Model.GroupType == GroupType.ACTeam ? "AK Ledere" : "SMS Afsendere";

    ViewBag.UserText = Model.GroupType == GroupType.ACTeam ? "Deltager" : "SMS Modtager";
    ViewBag.UserTextPl = Model.GroupType == GroupType.ACTeam ? "Deltagere" : "SMS Modtagere";
}

<style>
    td {
        padding: 10px;
    }
</style>

<fieldset>
    <input type="hidden" id="groupId" value="@Model.UserGroupId" />

    <legend>@(Model.GroupType == GroupType.SmsGroup ? "SMS Gruppe" : "AK Hold")</legend>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserGroupId)
        @Html.HiddenFor(model => model.GroupType)

        <table>
            <tr>
                <td class="editor-label">@Html.LabelFor(model => model.GroupName):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.GroupName)
                @Html.ValidationMessageFor(model => model.GroupName)
            </td>
            <td>
                <input class="k-button" type="submit" value="Gem" />
            </td>
        </tr>
    </table>
    }

    @if (Model.GroupType == GroupType.SmsGroup) {
        <div class="editor-label">
            @Html.LabelFor(model => model.Sql)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Sql, new { style = "width: 100%;" })
            @Html.ValidationMessageFor(model => model.Sql)
        </div>
    }

    @if (Model.GroupType == GroupType.ACTeam) {
        if (Model.GroupImage.Image != null) {
            using (Html.BeginForm("DeleteGroupImage", "UserGroup", new { GroupId = Model.UserGroupId })) {
                <table id="ImageTable">
                    <tr>
                        <td style="padding: 10px 10px 10px 10px;">
                            <img src="@Model.GroupImage.GetThumbUrl()" />
                        </td>
                        <td style="padding: 10px 10px 10px 10px;">
                            <input class="k-button" type="submit" value="Slet billede" />
                        </td>
                    </tr>
                </table>
            }
        } else {
            <form enctype="multipart/form-data" method="post" action="/UserGroup/SaveGroupImage/@Model.UserGroupId">
                <input class="k-input" type="file" id="imageFile" name="imageFile" />
                <input type="submit" value="Upload" class="k-button" />
            </form>
        }
    }

    <div class="editor-label">
        Ny bruger
    </div>
    <div class="editor-field">
        @(Html.Kendo().DropDownList().HtmlAttributes(new { style = "width: 300px;" })
            .Name("UserId")
            .OptionLabel(Labels.SelectUser)
            .DataTextField("Label")
            .DataValueField("UserId")
            .DataSource(source => {
                source.Read(read => {
                    read.Action("GetUserItemsLimit6", "Role");
                });
            })
        )
        &nbsp;&nbsp;&nbsp;&nbsp;
        <input type="button" class="k-button" value="Tilføj som @ViewBag.UserText" onclick="AddUser();" />
        &nbsp;&nbsp;&nbsp;&nbsp;
        <input type="button" class="k-button" value="Tilføj som @ViewBag.AdminText" onclick="AddAdministrator();" />

        <script>
            function AddUser() {
                var groupId = document.getElementById("groupId").value;
                var userId = $("#UserId").val();

                if (userId.length > 0)
                    $.ajax({
                        url: '/UserGroup/AddUser',
                        type: 'POST',
                        data: JSON.stringify({
                            UserId: userId,
                            GroupId: groupId
                        }),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            $('#userGrid').data('kendoGrid').dataSource.read();
                        },
                        error: function () {
                            alert("Kunne ikke tilføje denne bruger");
                        }
                    });
            }

            function AddAdministrator() {
                var groupId = document.getElementById("groupId").value;
                var userId = $("#UserId").val();

                if (userId.length > 0)
                    $.ajax({
                        url: '/UserGroup/AddAdmin',
                        type: 'POST',
                        data: JSON.stringify({
                            UserId: userId,
                            GroupId: groupId
                        }),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            $('#administratorGrid').data('kendoGrid').dataSource.read();
                        },
                        error: function () {
                            alert("Kunne ikke tilføje denne bruger");
                        }
                    });
            }
        </script>
    </div>

    <div class="editor-label">
        @ViewBag.AdminTextPl
    </div>
    <div class="editor-field">
        @(Html.Kendo().Grid<Hallo.ViewModels.VMUser>()
            .Name("administratorGrid")
            .Columns(columns => {
                columns.Bound(p => p.Lastname).Title(Labels.Lastname);
                columns.Bound(p => p.Firstname).Title(Labels.Firstname);
                columns.Bound(p => p.BirthYear).Title(Labels.Birthyear);
                columns.Command(command => { command.Destroy(); });
            })
            .Pageable()
            .Sortable()
            .Filterable()
            .Editable(e => e.DisplayDeleteConfirmation(false))
            .DataSource(
                dataSource => dataSource
                    .Ajax()
                    .Model(model => model.Id(u => u.CompositeGroupUserId))
                    .PageSize(3)
                    .Read(read => read.Action("GetAdministrators", "UserGroup", new { groupId = Model.UserGroupId }))
                    .Destroy(delete => delete.Action("RemoveAdmin", "UserGroup", new { groupId = Model.UserGroupId })))
        )

    </div>

    <div class="editor-label">
        @ViewBag.UserTextPl
    </div>
    <div class="editor-field">
        @(Html.Kendo().Grid<Hallo.ViewModels.VMUser>()
            .Name("userGrid")
            .Columns(columns => {
                columns.Bound(p => p.Lastname).Title(Labels.Lastname);
                columns.Bound(p => p.Firstname).Title(Labels.Firstname);
                columns.Bound(p => p.BirthYear).Title(Labels.Birthyear);
                columns.Command(command => { command.Destroy(); });
            })
            .Pageable()
            .Sortable()
            .Filterable()
            .Editable(e => e.DisplayDeleteConfirmation(false))
            .DataSource(
                dataSource => dataSource
                    .Ajax()
                    .Model(model => model.Id(u => u.CompositeGroupUserId))
                    .PageSize(10)
                    .Read(read => read.Action("GetUsers", "UserGroup", new { groupId = Model.UserGroupId }))
                    .Destroy(delete => delete.Action("RemoveUser", "UserGroup", new { groupId = Model.UserGroupId }))
            )
        )
    </div>
</fieldset>

<div>
    @Html.ActionLink("Back to List", Model.GroupType == GroupType.SmsGroup ? "Index" : "ACIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

