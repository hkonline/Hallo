@using Hallo.ViewModels;
@model HalloDal.Models.Content.Article

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Ret artikel</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Headline)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Headline, new { style = "width: 720px;" })
            @Html.ValidationMessageFor(model => model.Headline)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Author)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Author, new { style = "width: 720px;" })
            @Html.ValidationMessageFor(model => model.Author)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>

        <div class="editor-field">
            @Html.DisplayFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Categories)
        </div>

        <div class="editor-field">
            <table>
                <tr>
                @{
                    int i = 0;
                    List<AssignedArticleCategory> categories = ViewBag.Categories;

                    foreach (AssignedArticleCategory c in categories) {
                        if (i++ % 6 == 0) { 
                            @: </tr><tr>
                        }
                        @: <td style="padding: 5px 5px 5px 5px;">
                            <input type="checkbox" 
                                name="selectedCategories" 
                                value="@c.CategoryId" 
                                @(Html.Raw(c.Assigned ? "checked=\"checked\"" : "")) />
                            @c.Name                  
                        @: </td>
                    }           
                }
                </tr>
            </table>
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.FrontpageText)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.FrontpageText, new { style = "width: 720px;" })
            @Html.ValidationMessageFor(model => model.FrontpageText)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Text, new { style = "width: 720px;" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>

        <div>
            <br />
            @Html.ActionLink("Vælg forsidebillede", "FrontpageImage", "Image", new { id = @Model.Id }, null)
            &nbsp;&nbsp;&nbsp;
            @Html.ActionLink("Vælg andre billeder", "List", "Image", new { id = @Model.Id }, null)
        </div>
        <div style="text-align: right;">
        <p>
            <input id="submit" type="submit" value="Gem" class="k-button" />
        </p></div>
    </fieldset>
}

<div>
    @Html.ActionLink("Tilbage til listen", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    tinymce.init({
        selector: '#Text',
        menubar: false,
        statusbar: false
    });

    tinymce.init({
        selector: '#FrontpageText',
        menubar: false,
        statusbar: false
    });

    $("body").keydown(function (e) {
        if (e.which == 13) {
            jQuery(this).blur();
            jQuery('#submit').focus().click();
        }
    });
</script>
